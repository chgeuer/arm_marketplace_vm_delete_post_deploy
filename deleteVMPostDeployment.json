{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "metadata": {
        "description": "Specifies a name for generating resource names."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "chgeuer",
      "metadata": {
        "description": "Specifies a username for the Virtual Machine."
      }
    },
    "adminPublicKey": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChtYrLu/UY916owGYw5h7z+HVl452M+/GlLF3WQC0ONq9P+JBCoGgXfyI7bF+DMsx6Lx1WxMdEEnrPGQHIsYjRceYz3j8iS29PHV04tVDpfsS2H3ZH5S4n++CyvteIEbhvss5jeBnvqCgK+s3beJLEUhGR+63z57Lmk3nX3mw+Pe1xkTRTsU3aJxzlRi/h/pnne1/GP4eXP8rXpyFHLsaGUrLI2LRgvXVnzAWqB+JZcdsQKLY6pB9Scy1k3jMO28QHwhBWU1p4ZzU6X8/AIbGSi5VGAEw31VeaCa01MkZRysgEE+BLYiin0PEgMwU+6Oiq9hbvVnRJhp52MvstTHQv chgeuer@beam",
      "metadata": {
        "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3"
    },
    "usePreviewImage": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether the '-preview' image should be used."
      }
    }
  },
  "variables": {
    "artifactsLocation": "[deployment().properties.templateLink.uri]",
    "isvDetails": {
      "publisher": "upsolver1594188634150",
      "offer": "upsolver-vm",
      "sku": "upsolvervm01",
      "version": "latest"
    },
    "vmDetails": {
      "plan": {
        "publisher": "[variables('isvDetails').publisher]",
        "product": "[concat(variables('isvDetails').offer, if(parameters('usePreviewImage'), '-preview', ''))]",
        "name": "[variables('isvDetails').sku]"
      },
      "imageReference": {
        "publisher": "[variables('isvDetails').publisher]",
        "offer": "[concat(variables('isvDetails').offer, if(parameters('usePreviewImage'), '-preview', ''))]",
        "sku": "[variables('isvDetails').sku]",
        "version": "[variables('isvDetails').version]"
      }
    },
    "vNetSubnetName": "default",
    "names": {
      "identity": "[concat(parameters('projectName'), '-identity')]",
      "vNetName": "[concat(parameters('projectName'), '-vnet')]",
      "vmName": "[concat(parameters('projectName'), '-vm')]",
      "deploymentScript": "[concat(parameters('projectName'), '-deleteVmPostDeploymentScript')]",
      "publicIPAddressName": "[concat(parameters('projectName'), '-ip')]",
      "networkInterfaceName": "[concat(parameters('projectName'), '-nic')]",
      "networkSecurityGroupNameSubnet": "[concat(variables('vNetSubnetName'), '-nsg')]"
    },
    "addresses": {
      "vNetAddressPrefixes": "10.0.0.0/16",
      "vNetSubnetAddressPrefix": "10.0.0.0/24"
    },
    "apiVersions": {
      "MicrosoftNetwork": "2020-05-01",
      "MicrosoftCompute": "2020-06-01",
      "MicrosoftResourcesDeploymentScripts": "2019-10-01-preview",
      "managedidentity_userassignedidentities": "2018-11-30",
      "MicrosoftAuthorizationRoleAssignments": "2020-04-01-preview"
    },
    "buildInRolesID": {
      // https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
      "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
      "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
      "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[variables('apiVersions').MicrosoftNetwork]",
      "name": "[variables('names').publicIPAddressName]",
      "location": "[parameters('location')]",
      "sku": { "name": "Basic" },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "comments": "Simple Network Security Group for subnet",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('apiVersions').MicrosoftNetwork]",
      "name": "[variables('names').networkSecurityGroupNameSubnet]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 1000,
              "access": "Allow", "direction": "Inbound", "protocol": "Tcp",
              "sourceAddressPrefix": "*", "sourcePortRange": "*",
              "destinationAddressPrefix": "*", "destinationPortRange": "22"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "[variables('apiVersions').MicrosoftNetwork]",
      "name": "[variables('names').vNetName]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('names').networkSecurityGroupNameSubnet)]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addresses').vNetAddressPrefixes]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNetSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('addresses').vNetSubnetAddressPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('names').networkSecurityGroupNameSubnet)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVersions').MicrosoftNetwork]",
      "name": "[variables('names').networkInterfaceName]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('names').publicIPAddressName)]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('names').vNetName)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('names').publicIPAddressName)]" },
              "subnet": { "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('names').vNetName, variables('vNetSubnetName'))]" }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVersions').MicrosoftCompute]",
      "name": "[variables('names').vmName]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('names').networkInterfaceName)]"
      ],
      "plan": "[variables('vmDetails').plan]",
      "properties": {
        "hardwareProfile": { "vmSize": "[parameters('vmSize')]" },
        "osProfile": {
          "computerName": "[variables('names').vmName]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('vmDetails').imageReference]",
          "osDisk": { 
            "name": "[concat(variables('names').vmName, '-disk')]",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [ { "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('names').networkInterfaceName)]" } ]
        }
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "[variables('apiVersions').managedidentity_userassignedidentities]",
      "name": "[variables('names').identity]",
      "location": "[resourceGroup().location]"
    },
    {
      // https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "[variables('apiVersions').MicrosoftAuthorizationRoleAssignments]",
      "name": "[guid(concat(variables('names').identity, '-assignment-to-contributor'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('names').identity)]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('buildInRolesID').Contributor]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('names').identity), variables('apiVersions').managedidentity_userassignedidentities).principalId]",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      // https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deployment-script-template?tabs=CLI#use-external-scripts
      "name": "[variables('names').deploymentScript]",
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "[variables('apiVersions').MicrosoftResourcesDeploymentScripts]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('names').identity)]",
        "[resourceId('Microsoft.Compute/virtualMachines', variables('names').vmName)]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId(resourceGroup().name, 'Microsoft.ManagedIdentity/userAssignedIdentities', variables('names').identity)]": { }
        }
      },
      "kind": "AzureCLI",
      "properties": {
        "azCliVersion": "2.0.80",
        "timeout": "PT30M",
        "retentionInterval": "P1D",
        "cleanupPreference": "OnSuccess",
        "arguments": "[concat('passPhrase')]",
        "primaryScriptUri": "[uri(variables('artifactsLocation'), 'deleteVM.sh')]"
      }
    }
  ]
}